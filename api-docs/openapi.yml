openapi: 3.0.1
info:
  title: Recruiting Task Backend - Java API
  description: ""
  contact:
    email: yurk.jur@gmail.com
  version: v1
servers:
- url: http://localhost:8090
paths:
  /api/v1/user/{id}/:
    get:
      tags:
      - user
      summary: get one user by user id
      operationId: getUserById
      parameters:
      - name: id
        in: path
        required: true
        schema:
          type: integer
          format: int64
      responses:
        "404":
          description: Not Found
          content:
            '*/*':
              schema:
                $ref: '#/components/schemas/ErrorDto'
        "400":
          description: Bad Request
          content:
            '*/*':
              schema:
                type: object
                additionalProperties:
                  type: string
        "200":
          description: OK
          content:
            '*/*':
              schema:
                $ref: '#/components/schemas/ResponseUserDto'
    put:
      tags:
      - user
      summary: update user
      operationId: updateUser
      parameters:
      - name: id
        in: path
        required: true
        schema:
          type: integer
          format: int64
      requestBody:
        content:
          application/json:
            schema:
              $ref: '#/components/schemas/RequestUserDto'
        required: true
      responses:
        "404":
          description: Not Found
          content:
            '*/*':
              schema:
                $ref: '#/components/schemas/ErrorDto'
        "400":
          description: Bad Request
          content:
            '*/*':
              schema:
                type: object
                additionalProperties:
                  type: string
        "200":
          description: OK
    delete:
      tags:
      - user
      summary: delete user
      operationId: deleteUser
      parameters:
      - name: id
        in: path
        required: true
        schema:
          type: integer
          format: int64
      responses:
        "404":
          description: Not Found
          content:
            '*/*':
              schema:
                $ref: '#/components/schemas/ErrorDto'
        "400":
          description: Bad Request
          content:
            '*/*':
              schema:
                type: object
                additionalProperties:
                  type: string
        "200":
          description: OK
  /api/v1/user/:
    post:
      tags:
      - user
      summary: add new user
      operationId: addUser
      requestBody:
        content:
          application/json:
            schema:
              $ref: '#/components/schemas/RequestUserDto'
        required: true
      responses:
        "404":
          description: Not Found
          content:
            '*/*':
              schema:
                $ref: '#/components/schemas/ErrorDto'
        "400":
          description: Bad Request
          content:
            '*/*':
              schema:
                type: object
                additionalProperties:
                  type: string
        "201":
          description: Created
          content:
            '*/*':
              schema:
                $ref: '#/components/schemas/ResponseUserDto'
  /api/v1/user/{vorname}/all/:
    get:
      tags:
      - user
      summary: get all users by vorname
      operationId: getAllUsersByVorname
      parameters:
      - name: vorname
        in: path
        required: true
        schema:
          type: string
      responses:
        "404":
          description: Not Found
          content:
            '*/*':
              schema:
                $ref: '#/components/schemas/ErrorDto'
        "400":
          description: Bad Request
          content:
            '*/*':
              schema:
                type: object
                additionalProperties:
                  type: string
        "200":
          description: OK
          content:
            '*/*':
              schema:
                type: object
  /api/v1/user/all/:
    get:
      tags:
      - user
      summary: get all users
      operationId: getAllUsers
      responses:
        "404":
          description: Not Found
          content:
            '*/*':
              schema:
                $ref: '#/components/schemas/ErrorDto'
        "400":
          description: Bad Request
          content:
            '*/*':
              schema:
                type: object
                additionalProperties:
                  type: string
        "200":
          description: OK
          content:
            '*/*':
              schema:
                type: object
components:
  schemas:
    ErrorDto:
      type: object
      properties:
        errorMsg:
          type: string
    RequestUserDto:
      required:
      - email
      - name
      - vorname
      type: object
      properties:
        name:
          type: string
        vorname:
          type: string
        email:
          pattern: "^[a-zA-Z0-9._-]+@[a-zA-Z0-9.-]+\\.[a-zA-Z]{2,10}$"
          type: string
    ResponseUserDto:
      type: object
      properties:
        id:
          type: integer
          format: int64
        name:
          type: string
        vorname:
          type: string
        email:
          type: string
